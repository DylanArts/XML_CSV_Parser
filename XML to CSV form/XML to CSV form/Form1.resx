<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="openFileDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIACzFwAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgGAAAAXHKoZgAAF3pJ
        REFUeNrt3dlvHMeBBvCv+uCc5JASL0kUKZK6JUqUZTuxEyurrKPEXmDXGydAEMTxSwI/5GFf8rb7kIfk
        D9jkIQKyToAEcGDA3lzOOoJP2HIsW0lEkbpFiYd4iJfIua/urn3oGUmWesiZ4VCa5nw/YBA44szU9HR9
        U1VdXQUQERERERERERERERERERERERERERERERERkSsIt3+Ac+fO4eOPB/GVrzwBn08BIGFZcn1/aUJA
        CAHLstbl5zPNDCKRGDweHb29B1hLGQD3m5oagRACgISqKqivVxCJQAFMxTAsCNdHmzMpAUURUBQFhmGu
        u88ppYQlDWklE2Y4noWmAHsPPM6aygC4Y2ZmHFICQlgwDKtOVdUeQPYB2AogCEBZ59+bdPP3t8LnUkwj
        s5iIx//X59fHF2bj0HXBEGAA2GZnRyGlgMdzBanUjm0AviUE/h3ALgC+Gqj86/6czGZS6UQ89hvLtH7s
        8aoTkSWDIcAAACYnR6DrCnRdimxWHJZS/heAY7mKT+tEJpNCMh5NSCl/LS3xE49XYQisEVf9WmYyBlRV
        IJ2WO6WUPwbwr6z865YfwItCkf+ZTlkdDY0aslmJC4Of8sjUYgBIKeHz1SGTgQ4oXwfwT1h/fWD6LB9D
        gAEAAHjiCQEpTQhhbgXkswA8/PoYAlQjAfDHP45DSgtCiH4hsI9fHUOAIVBDASClhK7XKQC2AQjwq2MI
        MARqKADsGX6WImVNXOcnhgAD4G6WJWEYlqvKTAwBBkAFrdfpvcQQYAAQMQQYAEQMAQYAEUOAAUDEEGAA
        EDEEGABEDAEGABFDgAFAxBBgABAxBBgARAwBBgARQ4ABQMQQYAAQMQQYAEQMAQYAEUOAAUDEEGAAEEOA
        IcAAIIZALYcAA4AYAjUcAgwAohoOAQYAUQ2HAAOAqIZDgAFAVMMhwAAgquEQYAAQ1XAIMACIajgEGABE
        NRwCDACiGg4BBgBVoarcBXZdhgADgKrvpBSiWreCXnchwACg6jspVRWqolZr8dZVCDAAqPpOSkWFpteh
        SrsC6yoEGABUleo8Xmi6Xs1FXBchwACg6jwxFRVeXyDXEnBDCJgdG1v9MDMC1y4OuuY4azzVqGpPTk2H
        3x9EJpNCNpOBZZkAAFl9IfBdRYVIJbI/CbUpN+K3sgwAokpQVA0ebwB6nReWaUJKqxqL6QfwHQHlssiI
        n9aHpMkAIKoQIQRUVYOqVvXp6pVSNlqqJRThnp41xwCIKkMCwoIQVXzxggFAtJZcVPUZAEQ1jwFAxAAg
        IgYAETEAiIgBQEQMACJiABARA4CIGABExAAgIgYAETEAiIgBQEQMACJiABARA4CIGABExAAgIgYAETEA
        iIgBQEQMACJiABARA4CIGABExAAgIgYAETEAiIgBQEQMACJiABARA4CIGABExAAgIgYAETEAiIgBQMQA
        4CEgYgAQEQOAiBgARMQAICIGABExAIiIAUBEDAAiYgAQEQOAiBgARMQAICIGABExAIiIAUBEDACi9UxK
        BgBRzdZ/IYSrCqzxOyOqDCEAj6cOlmW5psxsARBVLgLgthYAA4CohjEAiBgARMQAICIGABExAIioJBLS
        ZTOBOA+AqFLVXwLpdAZuuhLIACCqIFVVAbinFcAuAFGFCCGg6xoUxT3VigFAVMMYAEQMACJiABBRTeFV
        AKIKkVLCMAxXzQVgABBVjshmDSiKeyYCsAtAVMkEcNdyAAwAolrGACBiABARA4CIGABExAAgIgYAETEA
        iIgBQEQMACJiABARA+DBctkGzFRDXHduuuduQEUBTAtCUdy2/yLVTvUXsKR9rjIAKmvpnfdhJdNCa6zX
        ha4JgClAVVX7hcwaurEUFYrPwwCotImf/w8EAEtKza77DACqqgAAJDRFCFf1A1wTAFYqBaEosEyT5xpV
        L1WFtCwGQMXlO/4cACC3nKsuwMuARDWMAUDEACAiBgARMQCIiAFARAwAImIAEBEDgIgYAETEACAiBgAR
        MQCIiAFARC7hntuB3UBWYCmItbqVtJyylVuW/Hs9yNtipeSt4gyAh1fphapCaBqEoqyq4ljZLKRhVORk
        lpYFIQSErtvlK2GtOmkYsLLZ0iqWlPb76Lr9n9kspGmuecUUug5FVSFN0y4zMQAeRMUXqoq65mYEtm1D
        /c6d8LS1QQ+FoNTVlXEWC1jpNOJjY1j89FNELl60g6DMsikeD3wdHQj29MDf3Q1vayu0YLDoypienUV4
        aAi3Tp9GdnGxqOfVNTej5cgRNOzbB0iJ6KVLmP/oI6Ru3lyTr0DxeBDq68PGz38enuZmpBcWMP/BBwif
        P1/+sWMAUDE8LS3Y+MQTaDl6FMHeXuihkP3rp6qrbgG0Hj2KkV/8AnMffFB6010I+Ds70fr002g5cgTe
        zZuher122YQormxSQloW2o4dw80TJzDy8sswwuHCz5USemMjur7zHbQ/+6wdNABajh5F6MABXDt+HKmp
        qYq2BISqovXLX8a2F1+Eb8sWiFwLoOmRR3Dt+HHc+vTTynTJGAB0bwWr37ULnd/+NjY8/ji0+vrblQDA
        qteDE6qKYE8Ptjz/PGJXryI5OVl8xRECTYcPo+uFFxDq64Pi8dwpm5SQJVYIvaEBbU8/jfDgIGbfeWf5
        933sMbR99at25c+9j+rzofmLX0T08mXcePVVuztQCVLC19GBLc89B39nJ6Rl2cddCAR37sSW555D7OpV
        ZBYWOC6wAl4FKFH97t3Y/oMfoPXoUbvy5ypXJUkpEdyxA/7u7pIqbaivDz0vvYSmRx+1K/8qyyYtC3oo
        hMb+frtbU+C1hKahfudO6HdV/nxFVX0+bHzySXiamyt3nBQFTYcOIdDbe9/xEULA39UFT3NzyYHHAKDl
        aiV8W7Zg24svorG/3/5lWcMTTORO5lLK1vXd76Jhz541CaWiiuFYNAl/VxcC27dX7HvQAgGE+vuher2O
        n9PKZGBlMjxnGQCVq/yKx4P2r30NGx5/fM13fhFCIDE+jsTYWFEhIDQNzU89haZDhyrbz1YUGPE4Ihcu
        2KPrBV5bGgaSN27Yle7ev5HSbkUcPFje4KhDoPi2bkX9rl2O5ZFSIjkxgfT8PLiF1Mo4BlCkYG8vWo4e
        vdO0LlBhcjW47KCRpon46CgmXn8dyWIGzqSEt70dLUeOQCnwiwghih8AzL+sZSEbDmPm7bdx69QpINfH
        LvS30cuXkZ6ZQcCh2yI0DaG+PnhaWkob03A6xqqK0L598La2On5OK53G0tmzMOJx9v8ZAJUhVBWNhw/D
        39FRsPJL00RibAypmZnymp9CQBoGUjMzWDh5EkuDg0UPmtXv3o1AT0/Bf7eSScTHxpBZWCh6kDIbiSA8
        NIT5Dz5Admlp2cokhEByYgKRS5fg7+pyDCl/ZyeC27fbAVAuKaE3NNhjEgXCLj03h8i5c5CmWdK8BwYA
        FTzp1EAADXv32hNcnPqc2Szm3nsPE6+9huTERPmTUXItgFKeLzQNgW3boPp895dNCJiJBCZ//3tM/+lP
        SM/PFz02IC2r+Ik8QsBIJLB05gxajhyB6vffNxio19cj1N+PhVOnYKXTZf0655v/wR07Cv5N9MoVJG7c
        YPOfAVA5eigEb2srhBD3jywLgcj58xj91a8QL7LPvlJlKunPFQVaMOj4ayeEQHJqCjfffBPxkZHSfxFL
        6DZIy0L04kWkbt5E0Gl0XtMQ2r8fntZWJG/cKOvQKPnXaGlxLKuVSmHpzBk2/0s5pjwEK5zYUkILBqEG
        Ao6XlaRhYOnMGSSnpu5MA17No7TCAULYg2sFnmvE4zBisfLKVlJW2GETvXjRsZtxe/Bu585yvwhoDQ0I
        9fc7jsMIIZCanUXkwoXKzTdgABAAKHV1UD0ep7Me0jSRXlio3pPuQV0SFAJmMonFgQGYyaTz1YBgcNn+
        +/IfQyLQ2Yn6ApcTpZSIXr6MJJv/DIC1OLmX5aLdYNeStCxEL12yW0MOx0yoKhr27oW3ra30E1XT0NDX
        5zyhKBc+bP4zAOghEkIgNT29cjegwDX8wslyZy6BcJhLIIRAemam4PsSA4AeTALc+SVOJBy7AZrfj8Zl
        ZvEVCgD/tm0I9PY6/3O+5TE5yeY/A4AeJmlZiCxTGW93A9rbi56rL3Tdnki0caNz8z+VwtLAAJv/DAB6
        2G43xwuMxksp4du8GfW7dxd3WfLu5n9uoZF73y81PW2vn8DmPwOAHnoC2N2AgYGC3QA1ELC7AU6TlxwE
        ursLznRcaeCRGADr3nJNaVHO/ILVF8i+JDcx4dwNUBTU79kD76ZNK3YDhKYhdOAA6pqaCo7+L545A9Mp
        bIgBsK7lbkm20umCFUlvbETdhg23F80o5rHquQNCIDUzg8j584W7AZs2rdwNkBJ1TU0IHThQsPmfnJpC
        9NIlNv/LxKnALidN075ZxzQB7bNfp7QseDdtQsfzz2Pa50M2EimqYlupFLKxGKxksvSFQXMBYOUG5tqO
        HbuzcMpdFVvNXQ2Ye/99mMsM3gW6uxHo7nb+7Pnpx9PTbP4zAGo3AGJXryIbjaJuw4b7Krii62g7dgxN
        hw/DiMWwYvXPtSiy4TASN24gcuECwmfPIj03V3IQ5G/MCe3bd/+9AYqChj174Nu8GdErV5y7CrqO0MGD
        hZv/8TiWCs08JAZArYhdv47Y8LC9WIkDoarwtLXB295ecrgYsRiWBgYw+bvfYWlgoKQ7+dKzs4icP4+G
        3bvve47MrWNQv3s3YsPDjkFU19SEUF8fhKY5zv1PTk7ebv7z1t/y8Ki5nRDIzM9j9t13YUSjy67cW8o4
        QH6RTa2hAc1PPYWdP/whtnz9659Z9HOlclnptH01IBZzvhrg86Gxvx/avbcP5wR6epZt/kdydx+y+c8A
        qGnSNDH/4YeYe//9ym/EkauY/o4OdL3wAtqffXbZVZHuFbtyBfHx8cJXA3bvhnfLlvu7CLqOxoMHoYdC
        js1/Ix7H0pkzMFMpNv8ZADVOCGQXFzH+299i4aOP1mQ3HmlZqGtqwtZvfvPOoqhFlCs9P4/IuXOwHDbq
        yHcDGvbu/WwTXkrUbdhgL21eaPR/chLRK1d4IxYDgPKVLTE6imvHj2PmxIk73YEKzgOQlgXv5s1of+YZ
        6I2NxV1RyHcDnLonUkL1eu1uQCDwmdcL9vbCv22b8xoMponI+fP2jkP89WcA0F0hMDaGa8eP4+pPf4r5
        kyeRnpmx5wkYBqRpFvXIv1ah92js7192Wa57xYaHC65wLBQF9bt2wdfRcbuyF9X8HxiAxeb/qvEqwDqU
        mZ/HzTffxK1Tp+Dv7IS/sxNaQ4PdnF6hwghFgXfTJjQ98ojz0lv55vn+/Vj6xz9WXgglN0gZPncODfv3
        3zdaL6WEt60NDXv3InrlCqRpwrtxIxr6+qBo2n0TfIQQSExM2M1/YgCQc6WDlMgsLCA9P4+lgYGSdi1W
        vV40HzmCnpdeskPAYX0/3+bNEJpW1E7GViaDpYEBtD/zzP1zFaSEkusGzLz1FrKRCILbtyPQ1bVs8z89
        M8PvuQLYBVjnQZD/xZWWVXQXIBuNYuHjjws324WA6vOVdPktfu3ashud5LsBiq7bYwINDc7N/1gMS2fO
        lL2yMDEAaMXcsK/hF5xhJ4Q9OaeETUvTCwsIDw05Xg0AAE9r6+3lwhr274eiaY7lSty4gdjVq/ySGADk
        JjKbRfjsWedNRnJbrzUeOoRQf7+94+9yzf/ZWf76VwjHAOiBiV2/jvjoKOo2bnT899C+ffA0NzvPNhQC
        RjRqN/+d9iCksrAFQA+GEMjcuoXw0JA9cHgvKeFpaUHDvn0QqurwdIH42BiibP4zAMidZDaL8OBg4b0G
        7xq0vJdlGIicO4fM/Dx//RkA5Fbx69cRHxkp7Un55v/AQHkbrxIDgKrASt2Agk+zZzg63jZMDIA1l789
        tsBJLYqYYUc2aRhYGhxEZnGx6GNmGQbCQ0P27sY8zgyAB81MJGAmk/dPYpESiqYh2N1d2kYXLiBU1XEh
        jvznvr12YBniIyPFdwOEgBGJYOnsWchyt10nBkDZFUEIZCMRZMPhAkdQwcYnn0TzF75g79IrZdEz7u57
        3L0oZznyi36U+/75MkgJX0dHwRWEpJSwUqmiN/a4t0JnFxcRHhwsqkILIRAfHWXzf41wHkARsuEwYsPD
        aDx40HESi6e1Fd3f/z6CO3Ygdu2avUR1GSzDQHpuDqmpqdKXuRYCdRs2wLtpE/RQqPwlsoSAHgqh5Utf
        gn/rVuc9/kwT6dnZstcdkIaBcK4b4GltXTbw8s3/zK1bbP4zAB4CIWBlMgifPYu2Y8ecb1EF4OvowNZv
        fcu+7bbMRSpkLgAWPvkEk6+/jtT0dFEnvVAUbPjc57D5uecQ7Omxy7iKyiJU1W7NFDgeRiyGyIUL9i94
        me8THx1F/Pp1OwCWOfbZpaU7zX8GAAPgoZAS4aEhhM+eRfNTTxX8m9v95lXQQyH4OzshhMDIL3+57JLZ
        +fcN9Pai+3vfQ8OePeU1ywu8biHRK1cQvXy5/NfOV+zBQTQdPlzwmOWb//Fr13gOrhGOARR5wqbn53Hz
        L39ZeSQ6v6lGmQ9pWVDq6tB85AgC3d0r75yjqtjw6KMI9PTYf1upR6GKGw5j9q237GXCV/GLLA0DkRWa
        9lZu4lApVwyIAbA2pMSt06cx/cYbK/8qr/qt7CWxvW1tK95yK1QVdRs32nfPreVViFxXaObECcx/+OHK
        C4EUIT46itj16wXfL7O0hDBH/xkAVSG3EcXEa69h/JVX7tyRtgZBkL/ykJ6fX7EFIE0TmcXFNVkI9HZ5
        FAVGLIbpN97A+Cuv2FdEVvteuW7A4unTjkt7CSGQKOVyITEAHkQIZBcXcePVVzH8s5/h1ief3F7z/vaK
        O6t8CCFgZbO4deoU4iMjK7YApGliaWAA8fHx22Ws1EMoCqRlITE+jvFXXsHIyy9X9FZcaZpY+OtfEblw
        4TNlF4qCbDSK+ZMnOfq/xjgIWEYImIkEZt97D5ELF9D06KNoOnQI/u5u6KEQNL+/7IFAaVnIhsNY+Ogj
        TLz2GoxIZOWTXwhEL13C9Z//HB3f+AaC27fb226vsn9uptNIz8wgPDSE+ZMnEbl4sfKLcObW9xv99a/R
        ZZoI7twJRdOQnp/H7HvvYebtt9e0ZUMMgLJPXEiJ1PQ0pv/8Z8y++y48LS3QQyGofr/jajZFVTzTRDYS
        QWJsbPldfhyet5BrMXg3bYLq95e/W46UsEwTViqF9Nwc0nNz9vJb+c9daVJi8W9/Q3JyEoGuLiheL1JT
        U0iMj3PLbwaAO4LAjMcRj8U+c1Kv5jVFOWMLuUBKTk2tfjAw996iwvsKLFv2yUkkJyYghICUsrxjQAyA
        hxUEVbE/XbWUY5Vl515/Dw4HAYkYAETEACAiBgARMQCIiAFARAwAImIAENH64Z6JQHfuU18/K2/SeiNR
        5mpQD4trWgAWAMP+n2juP4mq7RSNGnBXBLgmACQAjxAmgBEAKZ5vVGVSAEY8QphuaqK6JgCGg0EYdrYO
        5kKAqJqMABg0LAvDwSADoNLaUylYUsLKZocB/AFAmuccVYk0gD9Y2eywJSXaU+5poLrqtquLe/bgaigE
        j2lul8B/A3jGbZ+B1h0J4E0B/EdaVYd3hMPYc/GiawrvqtuBZ30+eA0DhqIMK1L+KPd//zMAD89DegjS
        AN4B8CNTiGGvYWDW53PVB3Ddr+eJxx6DlBKZmzeht7dvF0K8AODfAPQA8LrxM5GrSNgDftcB/EFK+Zvs
        zZvDde3tEELgq6dPMwDW2l8OH4YEoKkqDMPwCkXphRD7IWUnAD9DgNaw8icgxDikPCct65qmaSnDNCEA
        fO3vf3fdB3JtRfnz4cNIJJMI5te/CwaBcFi1VFWsp116qZpqi4BimhKhkIlYDFJKxBIJ+H0+/IsLK7+r
        AyDv/7ZvR+baNfgOHIDUdcjcOn1EaxEAQkqIbBbJwUHU9fbiWe5aTERERERERERERERERERERERERERE
        REREREQPwv8Dg72CLx0MQT8AAAAASUVORK5CYII=
</value>
  </data>
</root>